
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BEGIN BREAK CALL CLOSE_PAREN COLON COMMA CONTINUE CYCLE DIVISION ELSE END EQUAL FLOAT_DIGIT FLOAT_TYPE FUNCTION IF INTEGER_TYPE INT_DIGIT LESS LOGIC_EQUAL MINUS MORE MULTIPLY NAME_FUNCTION NEGATION OPEN_PAREN OR PRINT SEMI_COLON SUM VAR VARIABLEprogram :\n                | block colons bodyblock :\n              | varsvars :\n            | VAR vars variables colons types colonstypes :\n              | INTEGER_TYPE\n              | FLOAT_TYPEcolons :\n              | COLON\n              | SEMI_COLONvariables :\n                 | VARIABLE\n                 | VARIABLE COMMA variables\n                 | OPEN_PAREN variables CLOSE_PARENbody :\n            | BEGIN body lines colons END\n            | lines colonslines :\n             | function\n             | cycle\n             | assign\n             | expression\n             | print\n             | if\n             | callassign : variables EQUAL expressioncall : CALL NAME_FUNCTION variablesfunction :\n                | FUNCTION NAME_FUNCTION variables bodycycle :\n             | CYCLE condition bodyif : IF condition body else bodyelse :\n            | ELSEcondition : expression comparison expression\n                 | OPEN_PAREN condition CLOSE_PAREN logic_oplogic_op : AND\n                | OR\n                | NEGATIONcomparison : MORE\n                | LESS\n                | LOGIC_EQUALprint : PRINT expressionexpression :\n                  | term SUM term\n                  | term MINUS term\n                  | CONTINUE\n                  | BREAKterm :\n            | factor MULTIPLY factor\n            | factor DIVISION factorfactor :\n              | VARIABLE\n              | FLOAT_DIGIT\n              | INT_DIGIT\n              | OPEN_PAREN expression CLOSE_PAREN'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-1,0,-10,-4,-5,-17,-11,-12,-13,-2,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,-19,-13,-46,-17,-55,-51,-51,-45,-17,-13,-13,-54,-54,-7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'COLON':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,6,-4,-5,-20,-11,-12,-13,-17,6,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,6,-14,-20,-19,-13,-46,-17,-55,-51,-51,-45,-17,-13,-13,-54,-54,-7,6,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,6,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'SEMI_COLON':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,7,-4,-5,-20,-11,-12,-13,-17,7,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,7,-14,-20,-19,-13,-46,-17,-55,-51,-51,-45,-17,-13,-13,-54,-54,-7,7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,7,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'BEGIN':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,10,-11,-12,-13,10,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,-19,-13,-46,10,-55,-51,-51,-45,10,-13,-13,-54,-54,-7,10,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,10,-36,-6,-18,-38,-39,-40,-41,-34,]),'FUNCTION':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,19,-11,-12,-13,19,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,19,-19,-13,-46,19,-55,-51,-51,-45,19,-13,-13,-54,-54,-7,19,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,19,-36,-6,-18,-38,-39,-40,-41,-34,]),'CYCLE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,21,-11,-12,-13,21,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,21,-19,-13,-46,21,-55,-51,-51,-45,21,-13,-13,-54,-54,-7,21,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,21,-36,-6,-18,-38,-39,-40,-41,-34,]),'CONTINUE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,23,-11,-12,-13,23,-10,-21,-22,-23,-24,-25,-26,-27,23,-49,-50,23,23,23,-56,-57,-10,-14,23,-19,-13,23,23,23,-55,-51,-51,-45,23,23,-13,-13,-54,-54,-7,23,-28,-33,23,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,23,-36,-6,-18,-38,-39,-40,-41,-34,]),'BREAK':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,24,-11,-12,-13,24,-10,-21,-22,-23,-24,-25,-26,-27,24,-49,-50,24,24,24,-56,-57,-10,-14,24,-19,-13,24,24,24,-55,-51,-51,-45,24,24,-13,-13,-54,-54,-7,24,-28,-33,24,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,24,-36,-6,-18,-38,-39,-40,-41,-34,]),'PRINT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,25,-11,-12,-13,25,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,25,-19,-13,-46,25,-55,-51,-51,-45,25,-13,-13,-54,-54,-7,25,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,25,-36,-6,-18,-38,-39,-40,-41,-34,]),'IF':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,26,-11,-12,-13,26,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,26,-19,-13,-46,26,-55,-51,-51,-45,26,-13,-13,-54,-54,-7,26,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,26,-36,-6,-18,-38,-39,-40,-41,-34,]),'CALL':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,23,24,25,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,27,-11,-12,-13,27,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-10,-14,27,-19,-13,-46,27,-55,-51,-51,-45,27,-13,-13,-54,-54,-7,27,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,27,-36,-6,-18,-38,-39,-40,-41,-34,]),'VARIABLE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,28,-11,-12,34,28,-10,-21,-22,-23,-24,-25,-26,-27,43,-49,-50,43,43,28,-56,-57,-10,-14,34,28,-19,34,43,28,43,-55,43,43,-45,43,28,34,34,43,43,-7,28,-28,-33,43,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,28,-36,-6,-18,-38,-39,-40,-41,-34,]),'OPEN_PAREN':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,29,-11,-12,35,29,-10,-21,-22,-23,-24,-25,-26,-27,42,-49,-50,47,42,29,-56,-57,-10,-14,35,29,-19,35,47,29,42,-55,47,47,-45,47,29,35,35,47,47,-7,29,-28,-33,47,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,29,-36,-6,-18,-38,-39,-40,-41,-34,]),'FLOAT_DIGIT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,31,-11,-12,-13,31,-10,-21,-22,-23,-24,-25,-26,-27,31,-49,-50,31,31,31,-56,-57,-10,-14,31,-19,-13,31,31,31,-55,31,31,-45,31,31,-13,-13,31,31,-7,31,-28,-33,31,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,31,-36,-6,-18,-38,-39,-40,-41,-34,]),'INT_DIGIT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,32,-11,-12,-13,32,-10,-21,-22,-23,-24,-25,-26,-27,32,-49,-50,32,32,32,-56,-57,-10,-14,32,-19,-13,32,32,32,-55,32,32,-45,32,32,-13,-13,32,32,-7,32,-28,-33,32,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,32,-36,-6,-18,-38,-39,-40,-41,-34,]),'EQUAL':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,20,23,24,25,28,31,32,33,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-13,-11,-12,-13,-13,-10,-21,-22,-23,-24,-25,-26,-27,39,-49,-50,-46,-14,-56,-57,-10,-14,-13,-19,-13,-46,-13,-55,-51,-51,-45,-13,-13,-13,-54,-54,-7,-13,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-13,-36,-6,-18,-38,-39,-40,-41,-34,]),'SUM':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-51,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-51,44,-49,-50,-46,-51,-51,-56,-57,-10,-14,-51,-19,-13,-46,-17,-51,-55,-51,-51,-45,-51,-17,-13,-13,-54,-54,-7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'MINUS':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,29,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-51,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-51,45,-49,-50,-46,-51,-51,-56,-57,-10,-14,-51,-19,-13,-46,-17,-51,-55,-51,-51,-45,-51,-17,-13,-13,-54,-54,-7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'MULTIPLY':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,28,29,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-54,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-54,-49,-50,-46,-54,-55,-54,53,-56,-57,-10,-14,-54,-19,-13,-46,-17,-54,-55,-51,-51,-45,-54,-17,-13,-13,-54,-54,-7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'DIVISION':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,28,29,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-54,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-54,-49,-50,-46,-54,-55,-54,54,-56,-57,-10,-14,-54,-19,-13,-46,-17,-54,-55,-51,-51,-45,-54,-17,-13,-13,-54,-54,-7,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,-10,-8,-9,-31,-37,-17,-36,-6,-18,-38,-39,-40,-41,-34,]),'VAR':([0,4,],[4,4,]),'INTEGER_TYPE':([4,6,7,8,33,34,50,55,70,71,75,76,77,84,],[-5,-11,-12,-13,-10,-14,-13,76,-15,-16,-10,-8,-9,-6,]),'FLOAT_TYPE':([4,6,7,8,33,34,50,55,70,71,75,76,77,84,],[-5,-11,-12,-13,-10,-14,-13,77,-15,-16,-10,-8,-9,-6,]),'END':([6,7,10,11,12,13,14,15,16,17,18,23,24,25,31,32,34,36,37,38,39,40,43,44,45,46,48,49,50,53,54,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,78,79,80,82,83,85,86,87,88,89,90,],[-11,-12,-17,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-14,-20,-19,-13,-46,-17,-55,-51,-51,-45,-17,-13,-13,-54,-54,-10,-17,-28,-33,-46,-42,-43,-44,-47,-48,-35,-29,-15,-16,-58,-52,-53,85,-31,-37,-17,-36,-18,-38,-39,-40,-41,-34,]),'ELSE':([6,7,11,12,13,14,15,16,17,18,23,24,25,31,32,34,37,38,39,40,43,44,45,46,48,49,50,53,54,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,79,80,82,83,85,86,87,88,89,90,],[-11,-12,-10,-21,-22,-23,-24,-25,-26,-27,-49,-50,-46,-56,-57,-14,-19,-13,-46,-17,-55,-51,-51,-45,-17,-13,-13,-54,-54,-17,-28,-33,-46,-42,-43,-44,-47,-48,83,-29,-15,-16,-58,-52,-53,-31,-37,-17,-36,-18,-38,-39,-40,-41,-34,]),'NAME_FUNCTION':([19,27,],[38,49,]),'MORE':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-46,-49,-50,-46,-56,-57,61,-46,-55,-51,-51,-54,-54,61,-47,-48,-58,-52,-53,]),'LESS':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-46,-49,-50,-46,-56,-57,62,-46,-55,-51,-51,-54,-54,62,-47,-48,-58,-52,-53,]),'LOGIC_EQUAL':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-46,-49,-50,-46,-56,-57,63,-46,-55,-51,-51,-54,-54,63,-47,-48,-58,-52,-53,]),'CLOSE_PAREN':([23,24,28,29,31,32,34,35,42,43,44,45,47,50,51,52,53,54,60,61,62,63,64,65,66,67,70,71,72,73,74,80,86,87,88,89,],[-49,-50,-14,-13,-56,-57,-14,-13,-46,-55,-51,-51,-46,-13,71,72,-54,-54,-46,-42,-43,-44,81,72,-47,-48,-15,-16,-58,-52,-53,-37,-38,-39,-40,-41,]),'COMMA':([28,34,],[50,50,]),'AND':([81,],[87,]),'OR':([81,],[88,]),'NEGATION':([81,],[89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'vars':([0,4,],[3,8,]),'colons':([2,11,33,56,75,],[5,37,55,78,84,]),'body':([5,10,40,48,57,82,],[9,36,59,68,79,90,]),'lines':([5,10,36,40,48,57,82,],[11,11,56,11,11,11,11,]),'function':([5,10,36,40,48,57,82,],[12,12,12,12,12,12,12,]),'cycle':([5,10,36,40,48,57,82,],[13,13,13,13,13,13,13,]),'assign':([5,10,36,40,48,57,82,],[14,14,14,14,14,14,14,]),'expression':([5,10,21,25,26,29,36,39,40,42,47,48,57,60,82,],[15,15,41,46,41,52,15,58,15,65,52,15,15,80,15,]),'print':([5,10,36,40,48,57,82,],[16,16,16,16,16,16,16,]),'if':([5,10,36,40,48,57,82,],[17,17,17,17,17,17,17,]),'call':([5,10,36,40,48,57,82,],[18,18,18,18,18,18,18,]),'variables':([5,8,10,29,35,36,38,40,48,49,50,57,82,],[20,33,20,51,51,20,57,20,20,69,70,20,20,]),'term':([5,10,21,25,26,29,36,39,40,42,44,45,47,48,57,60,82,],[22,22,22,22,22,22,22,22,22,22,66,67,22,22,22,22,22,]),'factor':([5,10,21,25,26,29,36,39,40,42,44,45,47,48,53,54,57,60,82,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,73,74,30,30,30,]),'condition':([21,26,42,],[40,48,64,]),'comparison':([41,65,],[60,60,]),'types':([55,],[75,]),'else':([68,],[82,]),'logic_op':([81,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser_new.py',22),
  ('program -> block colons body','program',3,'p_program','parser_new.py',23),
  ('block -> <empty>','block',0,'p_block','parser_new.py',26),
  ('block -> vars','block',1,'p_block','parser_new.py',27),
  ('vars -> <empty>','vars',0,'p_vars','parser_new.py',30),
  ('vars -> VAR vars variables colons types colons','vars',6,'p_vars','parser_new.py',31),
  ('types -> <empty>','types',0,'p_types','parser_new.py',34),
  ('types -> INTEGER_TYPE','types',1,'p_types','parser_new.py',35),
  ('types -> FLOAT_TYPE','types',1,'p_types','parser_new.py',36),
  ('colons -> <empty>','colons',0,'p_colons','parser_new.py',39),
  ('colons -> COLON','colons',1,'p_colons','parser_new.py',40),
  ('colons -> SEMI_COLON','colons',1,'p_colons','parser_new.py',41),
  ('variables -> <empty>','variables',0,'p_variables','parser_new.py',44),
  ('variables -> VARIABLE','variables',1,'p_variables','parser_new.py',45),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','parser_new.py',46),
  ('variables -> OPEN_PAREN variables CLOSE_PAREN','variables',3,'p_variables','parser_new.py',47),
  ('body -> <empty>','body',0,'p_body','parser_new.py',50),
  ('body -> BEGIN body lines colons END','body',5,'p_body','parser_new.py',51),
  ('body -> lines colons','body',2,'p_body','parser_new.py',52),
  ('lines -> <empty>','lines',0,'p_lines','parser_new.py',55),
  ('lines -> function','lines',1,'p_lines','parser_new.py',56),
  ('lines -> cycle','lines',1,'p_lines','parser_new.py',57),
  ('lines -> assign','lines',1,'p_lines','parser_new.py',58),
  ('lines -> expression','lines',1,'p_lines','parser_new.py',59),
  ('lines -> print','lines',1,'p_lines','parser_new.py',60),
  ('lines -> if','lines',1,'p_lines','parser_new.py',61),
  ('lines -> call','lines',1,'p_lines','parser_new.py',62),
  ('assign -> variables EQUAL expression','assign',3,'p_assign','parser_new.py',64),
  ('call -> CALL NAME_FUNCTION variables','call',3,'p_call','parser_new.py',67),
  ('function -> <empty>','function',0,'p_function','parser_new.py',70),
  ('function -> FUNCTION NAME_FUNCTION variables body','function',4,'p_function','parser_new.py',71),
  ('cycle -> <empty>','cycle',0,'p_cycle','parser_new.py',74),
  ('cycle -> CYCLE condition body','cycle',3,'p_cycle','parser_new.py',75),
  ('if -> IF condition body else body','if',5,'p_if','parser_new.py',78),
  ('else -> <empty>','else',0,'p_else','parser_new.py',81),
  ('else -> ELSE','else',1,'p_else','parser_new.py',82),
  ('condition -> expression comparison expression','condition',3,'p_condition','parser_new.py',85),
  ('condition -> OPEN_PAREN condition CLOSE_PAREN logic_op','condition',4,'p_condition','parser_new.py',86),
  ('logic_op -> AND','logic_op',1,'p_logic_op','parser_new.py',89),
  ('logic_op -> OR','logic_op',1,'p_logic_op','parser_new.py',90),
  ('logic_op -> NEGATION','logic_op',1,'p_logic_op','parser_new.py',91),
  ('comparison -> MORE','comparison',1,'p_comparison','parser_new.py',94),
  ('comparison -> LESS','comparison',1,'p_comparison','parser_new.py',95),
  ('comparison -> LOGIC_EQUAL','comparison',1,'p_comparison','parser_new.py',96),
  ('print -> PRINT expression','print',2,'p_print','parser_new.py',99),
  ('expression -> <empty>','expression',0,'p_expression','parser_new.py',102),
  ('expression -> term SUM term','expression',3,'p_expression','parser_new.py',103),
  ('expression -> term MINUS term','expression',3,'p_expression','parser_new.py',104),
  ('expression -> CONTINUE','expression',1,'p_expression','parser_new.py',105),
  ('expression -> BREAK','expression',1,'p_expression','parser_new.py',106),
  ('term -> <empty>','term',0,'p_term','parser_new.py',109),
  ('term -> factor MULTIPLY factor','term',3,'p_term','parser_new.py',110),
  ('term -> factor DIVISION factor','term',3,'p_term','parser_new.py',111),
  ('factor -> <empty>','factor',0,'p_factor','parser_new.py',114),
  ('factor -> VARIABLE','factor',1,'p_factor','parser_new.py',115),
  ('factor -> FLOAT_DIGIT','factor',1,'p_factor','parser_new.py',116),
  ('factor -> INT_DIGIT','factor',1,'p_factor','parser_new.py',117),
  ('factor -> OPEN_PAREN expression CLOSE_PAREN','factor',3,'p_factor','parser_new.py',118),
]
