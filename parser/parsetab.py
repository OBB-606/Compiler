
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BEGIN BREAK CALL CLOSE_PAREN COLON COMMA CONTINUE CYCLE DIVISION ELSE END EQUAL FLOAT_DIGIT FLOAT_TYPE FUNCTION IF INTEGER_TYPE INT_DIGIT LESS LOGIC_EQUAL MINUS MORE MULTIPLY NAME_FUNCTION NEGATION OPEN_PAREN OR PRINT SEMI_COLON SUM VAR VARIABLEprogram :\n                | block colons bodyblock :\n              | varsvars :\n            | VAR vars variables colons types colonstypes :\n              | INTEGER_TYPE\n              | FLOAT_TYPEcolons :\n              | COLON\n              | SEMI_COLONvariables :\n                 | VARIABLE\n                 | VARIABLE COMMA variables\n                 | OPEN_PAREN variables CLOSE_PARENbody :\n            | BEGIN body lines colons END\n            | lines colonslines :\n             | function\n             | cycle\n             | assign\n             | expression\n             | print\n             | if\n             | callassign :\n              | variables EQUAL expressioncall :\n            | CALL NAME_FUNCTION variablesfunction :\n                | FUNCTION NAME_FUNCTION variables bodycycle :\n             | CYCLE condition bodyif :\n          | IF condition body else bodyelse :\n            | ELSEcondition :\n                 | expression comparison expression\n                 | OPEN_PAREN condition CLOSE_PAREN logic_oplogic_op :\n                | AND\n                | OR\n                | NEGATIONcomparison :\n                | MORE\n                | LESS\n                | LOGIC_EQUALprint :\n             | PRINT expressionexpression :\n                  | term SUM term\n                  | term MINUS term\n                  | CONTINUE\n                  | BREAKterm :\n            | factor MULTIPLY factor\n            | factor DIVISION factorfactor :\n              | VARIABLE\n              | FLOAT_DIGIT\n              | INT_DIGIT\n              | OPEN_PAREN expression CLOSE_PAREN'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-1,0,-10,-4,-5,-17,-11,-12,-13,-2,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,-19,-13,-53,-17,-47,-62,-58,-58,-52,-17,-13,-13,-61,-61,-7,-17,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'COLON':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,6,-4,-5,-20,-11,-12,-13,-17,6,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,6,-14,-20,-19,-13,-53,-17,-47,-62,-58,-58,-52,-17,-13,-13,-61,-61,-7,6,-17,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,6,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'SEMI_COLON':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,7,-4,-5,-20,-11,-12,-13,-17,7,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,7,-14,-20,-19,-13,-53,-17,-47,-62,-58,-58,-52,-17,-13,-13,-61,-61,-7,7,-17,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,7,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'BEGIN':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,10,-11,-12,-13,10,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,-19,-13,-53,10,-47,-62,-58,-58,-52,10,-13,-13,-61,-61,-7,10,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,10,-39,-6,-18,-42,-44,-45,-46,-37,]),'FUNCTION':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,19,-11,-12,-13,19,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,19,-19,-13,-53,19,-47,-62,-58,-58,-52,19,-13,-13,-61,-61,-7,19,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,19,-39,-6,-18,-42,-44,-45,-46,-37,]),'CYCLE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,21,-11,-12,-13,21,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,21,-19,-13,-53,21,-47,-62,-58,-58,-52,21,-13,-13,-61,-61,-7,21,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,21,-39,-6,-18,-42,-44,-45,-46,-37,]),'CONTINUE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,23,-11,-12,-13,23,-10,-21,-22,-23,-24,-25,-26,-27,23,-56,-57,23,23,23,-63,-64,-10,-14,23,-19,-13,23,23,-47,23,-62,-58,-58,-52,23,23,-13,-13,-61,-61,-7,23,-29,-35,23,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,23,-39,-6,-18,-42,-44,-45,-46,-37,]),'BREAK':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,24,-11,-12,-13,24,-10,-21,-22,-23,-24,-25,-26,-27,24,-56,-57,24,24,24,-63,-64,-10,-14,24,-19,-13,24,24,-47,24,-62,-58,-58,-52,24,24,-13,-13,-61,-61,-7,24,-29,-35,24,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,24,-39,-6,-18,-42,-44,-45,-46,-37,]),'PRINT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,25,-11,-12,-13,25,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,25,-19,-13,-53,25,-47,-62,-58,-58,-52,25,-13,-13,-61,-61,-7,25,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,25,-39,-6,-18,-42,-44,-45,-46,-37,]),'IF':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,26,-11,-12,-13,26,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,26,-19,-13,-53,26,-47,-62,-58,-58,-52,26,-13,-13,-61,-61,-7,26,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,26,-39,-6,-18,-42,-44,-45,-46,-37,]),'CALL':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,27,-11,-12,-13,27,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-10,-14,27,-19,-13,-53,27,-47,-62,-58,-58,-52,27,-13,-13,-61,-61,-7,27,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,27,-39,-6,-18,-42,-44,-45,-46,-37,]),'VARIABLE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,28,-11,-12,34,28,-10,-21,-22,-23,-24,-25,-26,-27,43,-56,-57,43,43,28,-63,-64,-10,-14,34,28,-19,34,43,28,-47,43,-62,43,43,-52,43,28,34,34,43,43,-7,28,-29,-35,43,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,28,-39,-6,-18,-42,-44,-45,-46,-37,]),'OPEN_PAREN':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,29,-11,-12,35,29,-10,-21,-22,-23,-24,-25,-26,-27,42,-56,-57,47,42,29,-63,-64,-10,-14,35,29,-19,35,47,29,-47,42,-62,47,47,-52,47,29,35,35,47,47,-7,29,-29,-35,47,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,29,-39,-6,-18,-42,-44,-45,-46,-37,]),'FLOAT_DIGIT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,31,-11,-12,-13,31,-10,-21,-22,-23,-24,-25,-26,-27,31,-56,-57,31,31,31,-63,-64,-10,-14,31,-19,-13,31,31,-47,31,-62,31,31,-52,31,31,-13,-13,31,31,-7,31,-29,-35,31,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,31,-39,-6,-18,-42,-44,-45,-46,-37,]),'INT_DIGIT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,32,-11,-12,-13,32,-10,-21,-22,-23,-24,-25,-26,-27,32,-56,-57,32,32,32,-63,-64,-10,-14,32,-19,-13,32,32,-47,32,-62,32,32,-52,32,32,-13,-13,32,32,-7,32,-29,-35,32,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,32,-39,-6,-18,-42,-44,-45,-46,-37,]),'EQUAL':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,28,31,32,33,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-13,-11,-12,-13,-13,-10,-21,-22,-23,-24,-25,-26,-27,39,-40,-56,-57,-53,-40,-14,-63,-64,-10,-14,-13,-19,-13,-53,-13,-47,-62,-58,-58,-52,-13,-13,-13,-61,-61,-7,-13,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-13,-39,-6,-18,-42,-44,-45,-46,-37,]),'SUM':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-58,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-40,44,-56,-57,-53,-40,-58,-63,-64,-10,-14,-58,-19,-13,-53,-17,-47,-53,-62,-58,-58,-52,-58,-17,-13,-13,-61,-61,-7,-17,-29,-35,-53,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'MINUS':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,29,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-58,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-40,45,-56,-57,-53,-40,-58,-63,-64,-10,-14,-58,-19,-13,-53,-17,-47,-53,-62,-58,-58,-52,-58,-17,-13,-13,-61,-61,-7,-17,-29,-35,-53,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'MULTIPLY':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-61,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-62,-61,53,-63,-64,-10,-14,-61,-19,-13,-53,-17,-47,-53,-62,-58,-58,-52,-61,-17,-13,-13,-61,-61,-7,-17,-29,-35,-53,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'DIVISION':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,23,24,25,26,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,-10,-4,-5,-61,-11,-12,-13,-17,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-62,-61,54,-63,-64,-10,-14,-61,-19,-13,-53,-17,-47,-53,-62,-58,-58,-52,-61,-17,-13,-13,-61,-61,-7,-17,-29,-35,-53,-48,-49,-50,-47,-54,-55,-38,-31,-15,-16,-65,-59,-60,-10,-8,-9,-33,-41,-43,-17,-39,-6,-18,-42,-44,-45,-46,-37,]),'VAR':([0,4,],[4,4,]),'INTEGER_TYPE':([4,6,7,8,33,34,50,55,70,71,75,76,77,84,],[-5,-11,-12,-13,-10,-14,-13,76,-15,-16,-10,-8,-9,-6,]),'FLOAT_TYPE':([4,6,7,8,33,34,50,55,70,71,75,76,77,84,],[-5,-11,-12,-13,-10,-14,-13,77,-15,-16,-10,-8,-9,-6,]),'END':([6,7,10,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,34,36,37,38,39,40,41,43,44,45,46,48,49,50,53,54,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,85,86,87,88,89,90,],[-11,-12,-17,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-14,-20,-19,-13,-53,-17,-47,-62,-58,-58,-52,-17,-13,-13,-61,-61,-10,-17,-29,-35,-53,-48,-49,-50,-54,-55,-38,-31,-15,-16,-65,-59,-60,85,-33,-41,-43,-17,-39,-18,-42,-44,-45,-46,-37,]),'ELSE':([6,7,11,12,13,14,15,16,17,18,21,23,24,25,26,31,32,34,37,38,39,40,41,43,44,45,46,48,49,50,53,54,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,79,80,81,82,83,85,86,87,88,89,90,],[-11,-12,-10,-21,-22,-23,-24,-25,-26,-27,-40,-56,-57,-53,-40,-63,-64,-14,-19,-13,-53,-17,-47,-62,-58,-58,-52,-17,-13,-13,-61,-61,-17,-29,-35,-53,-48,-49,-50,-54,-55,83,-31,-15,-16,-65,-59,-60,-33,-41,-43,-17,-39,-18,-42,-44,-45,-46,-37,]),'NAME_FUNCTION':([19,27,],[38,49,]),'MORE':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-53,-56,-57,-53,-63,-64,61,-53,-62,-58,-58,-61,-61,61,-54,-55,-65,-59,-60,]),'LESS':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-53,-56,-57,-53,-63,-64,62,-53,-62,-58,-58,-61,-61,62,-54,-55,-65,-59,-60,]),'LOGIC_EQUAL':([21,23,24,26,31,32,41,42,43,44,45,53,54,65,66,67,72,73,74,],[-53,-56,-57,-53,-63,-64,63,-53,-62,-58,-58,-61,-61,63,-54,-55,-65,-59,-60,]),'CLOSE_PAREN':([23,24,28,29,31,32,34,35,42,43,44,45,47,50,51,52,53,54,60,61,62,63,64,65,66,67,70,71,72,73,74,80,81,86,87,88,89,],[-56,-57,-14,-13,-63,-64,-14,-13,-40,-62,-58,-58,-53,-13,71,72,-61,-61,-53,-48,-49,-50,81,72,-54,-55,-15,-16,-65,-59,-60,-41,-43,-42,-44,-45,-46,]),'COMMA':([28,34,],[50,50,]),'AND':([81,],[87,]),'OR':([81,],[88,]),'NEGATION':([81,],[89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'vars':([0,4,],[3,8,]),'colons':([2,11,33,56,75,],[5,37,55,78,84,]),'body':([5,10,40,48,57,82,],[9,36,59,68,79,90,]),'lines':([5,10,36,40,48,57,82,],[11,11,56,11,11,11,11,]),'function':([5,10,36,40,48,57,82,],[12,12,12,12,12,12,12,]),'cycle':([5,10,36,40,48,57,82,],[13,13,13,13,13,13,13,]),'assign':([5,10,36,40,48,57,82,],[14,14,14,14,14,14,14,]),'expression':([5,10,21,25,26,29,36,39,40,42,47,48,57,60,82,],[15,15,41,46,41,52,15,58,15,65,52,15,15,80,15,]),'print':([5,10,36,40,48,57,82,],[16,16,16,16,16,16,16,]),'if':([5,10,36,40,48,57,82,],[17,17,17,17,17,17,17,]),'call':([5,10,36,40,48,57,82,],[18,18,18,18,18,18,18,]),'variables':([5,8,10,29,35,36,38,40,48,49,50,57,82,],[20,33,20,51,51,20,57,20,20,69,70,20,20,]),'term':([5,10,21,25,26,29,36,39,40,42,44,45,47,48,57,60,82,],[22,22,22,22,22,22,22,22,22,22,66,67,22,22,22,22,22,]),'factor':([5,10,21,25,26,29,36,39,40,42,44,45,47,48,53,54,57,60,82,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,73,74,30,30,30,]),'condition':([21,26,42,],[40,48,64,]),'comparison':([41,65,],[60,60,]),'types':([55,],[75,]),'else':([68,],[82,]),'logic_op':([81,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> <empty>','program',0,'p_program','parser_new.py',5),
  ('program -> block colons body','program',3,'p_program','parser_new.py',6),
  ('block -> <empty>','block',0,'p_block','parser_new.py',9),
  ('block -> vars','block',1,'p_block','parser_new.py',10),
  ('vars -> <empty>','vars',0,'p_vars','parser_new.py',13),
  ('vars -> VAR vars variables colons types colons','vars',6,'p_vars','parser_new.py',14),
  ('types -> <empty>','types',0,'p_types','parser_new.py',17),
  ('types -> INTEGER_TYPE','types',1,'p_types','parser_new.py',18),
  ('types -> FLOAT_TYPE','types',1,'p_types','parser_new.py',19),
  ('colons -> <empty>','colons',0,'p_colons','parser_new.py',22),
  ('colons -> COLON','colons',1,'p_colons','parser_new.py',23),
  ('colons -> SEMI_COLON','colons',1,'p_colons','parser_new.py',24),
  ('variables -> <empty>','variables',0,'p_variables','parser_new.py',27),
  ('variables -> VARIABLE','variables',1,'p_variables','parser_new.py',28),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','parser_new.py',29),
  ('variables -> OPEN_PAREN variables CLOSE_PAREN','variables',3,'p_variables','parser_new.py',30),
  ('body -> <empty>','body',0,'p_body','parser_new.py',33),
  ('body -> BEGIN body lines colons END','body',5,'p_body','parser_new.py',34),
  ('body -> lines colons','body',2,'p_body','parser_new.py',35),
  ('lines -> <empty>','lines',0,'p_lines','parser_new.py',38),
  ('lines -> function','lines',1,'p_lines','parser_new.py',39),
  ('lines -> cycle','lines',1,'p_lines','parser_new.py',40),
  ('lines -> assign','lines',1,'p_lines','parser_new.py',41),
  ('lines -> expression','lines',1,'p_lines','parser_new.py',42),
  ('lines -> print','lines',1,'p_lines','parser_new.py',43),
  ('lines -> if','lines',1,'p_lines','parser_new.py',44),
  ('lines -> call','lines',1,'p_lines','parser_new.py',45),
  ('assign -> <empty>','assign',0,'p_assign','parser_new.py',47),
  ('assign -> variables EQUAL expression','assign',3,'p_assign','parser_new.py',48),
  ('call -> <empty>','call',0,'p_call','parser_new.py',51),
  ('call -> CALL NAME_FUNCTION variables','call',3,'p_call','parser_new.py',52),
  ('function -> <empty>','function',0,'p_function','parser_new.py',55),
  ('function -> FUNCTION NAME_FUNCTION variables body','function',4,'p_function','parser_new.py',56),
  ('cycle -> <empty>','cycle',0,'p_cycle','parser_new.py',59),
  ('cycle -> CYCLE condition body','cycle',3,'p_cycle','parser_new.py',60),
  ('if -> <empty>','if',0,'p_if','parser_new.py',63),
  ('if -> IF condition body else body','if',5,'p_if','parser_new.py',64),
  ('else -> <empty>','else',0,'p_else','parser_new.py',67),
  ('else -> ELSE','else',1,'p_else','parser_new.py',68),
  ('condition -> <empty>','condition',0,'p_condition','parser_new.py',71),
  ('condition -> expression comparison expression','condition',3,'p_condition','parser_new.py',72),
  ('condition -> OPEN_PAREN condition CLOSE_PAREN logic_op','condition',4,'p_condition','parser_new.py',73),
  ('logic_op -> <empty>','logic_op',0,'p_logic_op','parser_new.py',76),
  ('logic_op -> AND','logic_op',1,'p_logic_op','parser_new.py',77),
  ('logic_op -> OR','logic_op',1,'p_logic_op','parser_new.py',78),
  ('logic_op -> NEGATION','logic_op',1,'p_logic_op','parser_new.py',79),
  ('comparison -> <empty>','comparison',0,'p_comparison','parser_new.py',82),
  ('comparison -> MORE','comparison',1,'p_comparison','parser_new.py',83),
  ('comparison -> LESS','comparison',1,'p_comparison','parser_new.py',84),
  ('comparison -> LOGIC_EQUAL','comparison',1,'p_comparison','parser_new.py',85),
  ('print -> <empty>','print',0,'p_print','parser_new.py',88),
  ('print -> PRINT expression','print',2,'p_print','parser_new.py',89),
  ('expression -> <empty>','expression',0,'p_expression','parser_new.py',92),
  ('expression -> term SUM term','expression',3,'p_expression','parser_new.py',93),
  ('expression -> term MINUS term','expression',3,'p_expression','parser_new.py',94),
  ('expression -> CONTINUE','expression',1,'p_expression','parser_new.py',95),
  ('expression -> BREAK','expression',1,'p_expression','parser_new.py',96),
  ('term -> <empty>','term',0,'p_term','parser_new.py',99),
  ('term -> factor MULTIPLY factor','term',3,'p_term','parser_new.py',100),
  ('term -> factor DIVISION factor','term',3,'p_term','parser_new.py',101),
  ('factor -> <empty>','factor',0,'p_factor','parser_new.py',104),
  ('factor -> VARIABLE','factor',1,'p_factor','parser_new.py',105),
  ('factor -> FLOAT_DIGIT','factor',1,'p_factor','parser_new.py',106),
  ('factor -> INT_DIGIT','factor',1,'p_factor','parser_new.py',107),
  ('factor -> OPEN_PAREN expression CLOSE_PAREN','factor',3,'p_factor','parser_new.py',108),
]
